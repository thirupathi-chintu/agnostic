#
# This file is managed by Ansible
#
# Server Block for Virtual host start
server {
        listen  80;
        root {{pl_nginx_home_directory}}/html;
        index index.php index.html index.htm;
        #Uncomment the below line to force redirect to https
        #rewrite ^ https://$http_host$request_uri? permanent;
        server_name {{hostname}}.{{domain_name}};
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header REFERER $http_referer;
        #add_header  X-Upstream  $upstream_addr;
        location / {
		            try_files $uri $uri/ =404;
                proxy_cache STATIC;
                proxy_hide_header Cache-Control;
                expires 60M;
                add_header Cache-Control "public";
                # Uncomment to enable naxsi on this location
                #Enable naxsi
                SecRulesEnabled;
                #Enable learning mode
                LearningMode;
                #Define where blocked requests go
                DeniedUrl "/error-page-50x.html";
                #CheckRules, determining when naxsi needs to take action
                CheckRule "$SQL >= 8" BLOCK;
                CheckRule "$RFI >= 8" BLOCK;
                CheckRule "$TRAVERSAL >= 4" BLOCK;
                CheckRule "$EVADE >= 4" BLOCK;
                CheckRule "$XSS >= 8" BLOCK;
                CheckRule "$XSS >= 4" BLOCK;
        }

        # Uncomment for php
        #pass the PHP scripts to FastCGI server listening on 127.0.0.1:9$
        #location ~ \.php$ {
        #        try_files $uri =404;
        #        fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
        #        fastcgi_index index.php;
        #        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #        include fastcgi_params;
        #}

        # Expire rules for static content
        # cache.appcache, your document html and data
        location ~* \.(?:manifest|appcache|html?|xml|json)$ {
                expires -1;
              # access_log logs/static.log; # I don't usually include a static log
        }
        # Feed
        location ~* \.(?:rss|atom)$ {
                expires 1h;
                add_header Cache-Control "public";
        }
        # Media: images, icons, video, audio, HTC
                location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
                expires 1M;
                access_log off;
                add_header Cache-Control "public";
        }
        # CSS and Javascript
        location ~* \.(?:css|js)$ {
                expires 1y;
                access_log off;
                add_header Cache-Control "public";
        }
        #Define custom error pages
        error_page 400 404 /error-page-404.html;
        location = /error-page-404.html {
                root {{pl_nginx_home_directory}}/html;
                internal;
        }
        error_page 403 /error-page-403.html;
        location = /error-page-403.html {
                root {{pl_nginx_home_directory}}/html;
                internal;
        }
        error_page 500 502 503 504 /error-page-50x.html;
        location = /error-page-50x.html {
                root {{pl_nginx_home_directory}}/html;
                internal;
        }
}
# Server Block for Virtual host end
