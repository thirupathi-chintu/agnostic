#!/bin/bash
#
# /etc/init.d/elastichq -- startup script for ElasticHQ
#
### BEGIN INIT INFO
# Provides:          ElasticHQ
# Required-Start:    $network $remote_fs $named
# Required-Stop:     $network $remote_fs $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts ElasticHQ
# Description:       Starts ElasticHQ using start-stop-daemon
### END INIT INFO

DAEMON_NAME=elastichq
# Check that networking is up.
#[ ${NETWORKING} = "no" ] && exit 0

# See how we were called.
case "$1" in
  start)
        # Start daemon.
        pid=`ps ax | grep -i 'application.py' | grep -v grep | awk '{print $1}'`
        if [ -n "$pid" ]
          then
            echo "elastichq is already Running"
        else
          echo "Starting $DAEMON_NAME";
          cd {{pl_elastichq_directory}};
          nohup /usr/bin/python3 application.py > {{pl_elastichq_directory}}/logs/elastichq.log 2>&1 &
        fi
        ;;
  stop)
        # Stop daemons.
        echo "Shutting down $DAEMON_NAME";
        pid=`ps ax | grep -i 'application.py' | grep -v grep | awk '{print $1}'`
        if [ -n "$pid" ]
          then
          kill -9 $pid
        else
          echo "elastichq was not Running"
        fi
        ;;
  restart)
        $0 stop
        sleep 2
        $0 start
        ;;
  status)
        pid=`ps ax | grep -i 'application.py' | grep -v grep | awk '{print $1}'`
        if [ -n "$pid" ]
          then
          echo "elastichq is Running as PID: $pid"
        else
          echo "elastichq is not Running"
        fi
        ;;
  *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 1
esac

exit 0
